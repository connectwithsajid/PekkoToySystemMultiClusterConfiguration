# ========================
# Cluster 1 Configuration
# ========================
cluster1 {
  pekko {
    actor {
      provider = "cluster"
      allow-java-serialization = off
      warn-about-java-serializer-usage = on
      serializers {
        jackson-json = "org.apache.pekko.serialization.jackson.JacksonJsonSerializer"
      }
      serialization-bindings {
        "com.pekko.toy.actors.*" = jackson-json
      }
      default-dispatcher {
        fork-join-executor {
          parallelism-min = 4
          parallelism-factor = 2.0
          parallelism-max = 8
        }
      }
    }
    remote.artery {
      canonical.hostname = "127.0.0.1"
      canonical.port = 2551
    }
    cluster {
      seed-nodes = [
        "pekko://PekkoToySystem1@127.0.0.1:2551"
      ]
      roles = ["backend1"]
      downing-provider-class = "org.apache.pekko.cluster.sbr.SplitBrainResolverProvider"
      jmx.multi-mbeans-in-same-jvm = on
      min-nr-of-members = 1
    }
    management {
      http {
        hostname = "127.0.0.1"
        port = 8558
        bind-hostname = "0.0.0.0"
        bind-port = 8558
      }
    }
    loglevel = "INFO"
    loggers = ["org.apache.pekko.event.slf4j.Slf4jLogger"]
    logging-filter = "org.apache.pekko.event.slf4j.Slf4jLoggingFilter"
    coordinated-shutdown.exit-jvm = on
    metrics.enabled = on
  }
  pekko.toy-system {
    actor-pools = [
      { type = "vertex",   instances = 4, pools = 1 }
      { type = "edge",     instances = 2, pools = 2 }
      { type = "property", instances = 1, pools = 1 }
    ]
    vertex-chunk-size = 10
    edge-chunk-size = 100
    property-chunk-size = 5
  }
}

# ========================
# Cluster 2 Configuration
# ========================
cluster2 {
  pekko {
    actor {
      provider = "cluster"
      allow-java-serialization = off
      warn-about-java-serializer-usage = on
      serializers {
        jackson-json = "org.apache.pekko.serialization.jackson.JacksonJsonSerializer"
      }
      serialization-bindings {
        "com.pekko.toy.actors.*" = jackson-json
      }
      default-dispatcher {
        fork-join-executor {
          parallelism-min = 2
          parallelism-factor = 1.5
          parallelism-max = 4
        }
      }
    }
    remote.artery {
      canonical.hostname = "127.0.0.1"
      canonical.port = 2552
    }
    cluster {
      seed-nodes = [
        "pekko://PekkoToySystem2@127.0.0.1:2552"
      ]
      roles = ["backend2"]
      downing-provider-class = "org.apache.pekko.cluster.sbr.SplitBrainResolverProvider"
      jmx.multi-mbeans-in-same-jvm = on
      min-nr-of-members = 1
    }
    management {
      http {
        hostname = "127.0.0.1"
        port = 8559
        bind-hostname = "0.0.0.0"
        bind-port = 8559
      }
    }
    loglevel = "INFO"
    loggers = ["org.apache.pekko.event.slf4j.Slf4jLogger"]
    logging-filter = "org.apache.pekko.event.slf4j.Slf4jLoggingFilter"
    coordinated-shutdown.exit-jvm = on
    metrics.enabled = on
  }
  pekko.toy-system {
    actor-pools = [
      { type = "vertex",   instances = 1, pools = 2 }
      { type = "edge",     instances = 4, pools = 1 }
      { type = "property", instances = 2, pools = 2 }
    ]
    vertex-chunk-size = 8
    edge-chunk-size = 50
    property-chunk-size = 10
  }
}

# ========================
# Cluster 3 Configuration
# ========================
cluster3 {
  pekko {
    actor {
      provider = "cluster"
      allow-java-serialization = off
      warn-about-java-serializer-usage = on
      serializers {
        jackson-json = "org.apache.pekko.serialization.jackson.JacksonJsonSerializer"
      }
      serialization-bindings {
        "com.pekko.toy.actors.*" = jackson-json
      }
      default-dispatcher {
        fork-join-executor {
          parallelism-min = 2
          parallelism-factor = 1.0
          parallelism-max = 3
        }
      }
    }
    remote.artery {
      canonical.hostname = "127.0.0.1"
      canonical.port = 2553
    }
    cluster {
      seed-nodes = [
        "pekko://PekkoToySystem3@127.0.0.1:2553"
      ]
      roles = ["backend3"]
      downing-provider-class = "org.apache.pekko.cluster.sbr.SplitBrainResolverProvider"
      jmx.multi-mbeans-in-same-jvm = on
      min-nr-of-members = 1
    }
    management {
      http {
        hostname = "127.0.0.1"
        port = 8560
        bind-hostname = "0.0.0.0"
        bind-port = 8560
      }
    }
    loglevel = "INFO"
    loggers = ["org.apache.pekko.event.slf4j.Slf4jLogger"]
    logging-filter = "org.apache.pekko.event.slf4j.Slf4jLoggingFilter"
    coordinated-shutdown.exit-jvm = on
    metrics.enabled = on
  }
  pekko.toy-system {
    actor-pools = [
      { type = "vertex",   instances = 2, pools = 1 }
      { type = "edge",     instances = 2, pools = 1 }
      { type = "property", instances = 4, pools = 2 }
    ]
    vertex-chunk-size = 5
    edge-chunk-size = 200
    property-chunk-size = 20
  }
}

# ========================
# Cluster 4 Configuration
# ========================
cluster4 {
  pekko {
    actor {
      provider = "cluster"
      allow-java-serialization = off
      warn-about-java-serializer-usage = on
      serializers {
        jackson-json = "org.apache.pekko.serialization.jackson.JacksonJsonSerializer"
      }
      serialization-bindings {
        "com.pekko.toy.actors.*" = jackson-json
      }
      default-dispatcher {
        fork-join-executor {
          parallelism-min = 3
          parallelism-factor = 1.2
          parallelism-max = 6
        }
      }
    }
    remote.artery {
      canonical.hostname = "127.0.0.1"
      canonical.port = 2554
    }
    cluster {
      seed-nodes = [
        "pekko://PekkoToySystem4@127.0.0.1:2554"
      ]
      roles = ["backend4"]
      downing-provider-class = "org.apache.pekko.cluster.sbr.SplitBrainResolverProvider"
      jmx.multi-mbeans-in-same-jvm = on
      min-nr-of-members = 1
    }
    management {
      http {
        hostname = "127.0.0.1"
        port = 8561
        bind-hostname = "0.0.0.0"
        bind-port = 8561
      }
    }
    loglevel = "INFO"
    loggers = ["org.apache.pekko.event.slf4j.Slf4jLogger"]
    logging-filter = "org.apache.pekko.event.slf4j.Slf4jLoggingFilter"
    coordinated-shutdown.exit-jvm = on
    metrics.enabled = on
  }
  pekko.toy-system {
    actor-pools = [
      { type = "vertex",   instances = 3, pools = 2 }
      { type = "edge",     instances = 1, pools = 1 }
      { type = "property", instances = 3, pools = 1 }
    ]
    vertex-chunk-size = 12
    edge-chunk-size = 75
    property-chunk-size = 8
  }
}

# ========================
# JVM and Logging (applies to all clusters)
# ========================
jvm-options {
  # Example: -Xms512M -Xmx2G -XX:+UseG1GC
}

slf4j {
  logger = "INFO"
}
